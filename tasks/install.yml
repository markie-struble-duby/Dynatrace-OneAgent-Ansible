---
- name: set install params - legacy method
  set_fact:
    oneagent_install_params: "{{ item.key }}={{ item.value }}"
  with_dict: "{{ dynatrace_oneagent_install_args }}"
  register: oneagent_install_param
  when: not dynatrace_use_oneagentctl

- name: set install params - set-param method
  set_fact:
    oneagent_install_params: "--{{ item.key }}={{ item.value }}"
  with_dict: "{{ dynatrace_oneagent_install_args_new }}"
  register: oneagent_install_param
  when: dynatrace_use_oneagentctl

- name: install dynatrace oneagent | linux
  command: "{{ dynatrace_oneagent_install_cmd }} {{ oneagent_install_param.results | map(attribute='ansible_facts.oneagent_install_params') | join(' ') }}"
  args:
    creates: "{{ dynatrace_oneagent_install_artifact }}"
  when: ansible_system|lower == "linux" and dynatrace_oneagent_package_state != "absent"

- name: uninstall dynatrace oneAgent | linux
  command: "{{ dynatrace_oneagent_uninstall_cmd }}"
  args:
    removes: "{{ dynatrace_oneagent_install_artifact }}"
  when: ansible_system|lower == "linux" and dynatrace_oneagent_package_state == "absent"

- name: install dynatrace oneagent | windows
  win_package:
    path: "{{ dynatrace_oneagent_install_script }}"
    creates_service: "{{ dynatrace_oneagent_service_name }}"
    arguments: "{{ oneagent_install_param.results | map(attribute='ansible_facts.oneagent_install_params') | join(' ') }} --quiet"
    state: "{{ dynatrace_oneagent_package_state }}"
  when: ansible_system|lower == "win32nt"